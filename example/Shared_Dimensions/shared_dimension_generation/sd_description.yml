# The SD URL will be the Identifier concatenated to the fixed "https://ld.admin.ch/cube/dimension/"
# If the SD URL starts with http, it will instead use that instead of the default
# Note: a SD's URL is not relative to the LINDAS environment, and it will be dereferenceable only when published on PROD
Identifier: pylindas_sd_generation_example
# TODO Base: Optional, allows for separation of DefinedTermSet and the base for identifier-field, where identifier defines the TermSet
Name:
  en: PyLindas Shared Dimension generation example
  fr: PyLindas example de génération d'une Shared Dimension 
  de: PyLindas Shared Dimension generation example (de)
  it: PyLindas Shared Dimension generation example (it)
# Description is optional
Description:
  fr: Un example de génération d'une Shared Dimension par PyLindas
  en: An example of Shared Dimension generation by PyLindas
# Valid-from is optional, it is a date/time value  
# Note: it is currently optional, but might need to become mandatory as validFrom, and later validThrough, are used to make a SD and its term 'deprecated'
Valid-from: 2025-02-05T00:00:00Z
# Contributor is optional, it is now added by the Cube Creator when creating a new SD
Contributor:
  name: Fabian Cretton
  email: fabian.cretton@dummy.ch
Terms:
  identifier-field: code
  name-field: name
  multilingual: True
  # links-to-other-terms is optional
  # It allows to create links between terms of a same dataset, as for instance the creation of a hierarchy based on child to parent relations with the skos:broader property
  # The identifier of the other term must be found on the same line, as for example:
  #   code;parent_code;name
  #   1;;Alle Artengruppen
  #   1.1;1;Tiere  
  links-to-other-terms:
    #parent_code: name of the column that contains the identifier of the other term
    parent_code:
      # property: the current proposal here does not handle relative URIs, but request an existing property
      # to be adapted if needed
      property: http://www.w3.org/2004/02/skos/core#broader

  #mapping is optional, and is used to replace the entrys in the SharedDimension with URI's to different SharedDimensions
  #there are currently 4 types additive, replace, regex and concept adapted from Cube.py
  #anytime something is added to mapping, it should also be added to other-fields, and given the appropriate datatype and URI
  #if made into an URI, make sure the entries are valid as URI's so no empty spaces
  mapping:
    #this is the name of the column in which the entries are to be replaced
    location:
      #type addtitive, adds whatever is in the entry at the end of the "base" so , "base" + "entry"
      type: additive
      base: https://www.wikidata.org/wiki/
    wikidata:
      #type replace, replaces the entry fully with the given replacement, all entries are changed to the same thing, nondynamically
      type: replace
      replacement: https://www.wikidata.org/wiki/Q1
    concept:
      #type concept, the entry is changed to the URI given
      #Columns can be placed in {} and when done so, those places in the URI will dynamically be appropriated as the given entries inside the Column
      #if started with "/" it will use the cubes base_URL and add concept inside ex: /parent/{parent}, will give baseURI + /parent + /(entry in the column of parent)
      type: concept
      replacement-automated: http://the_cube_uri/concept/{concept}/{code}

    #TODO Regex example
  
  # other-fields are optional, URI could be relative (and concatenated to the SD's URI) or a full URI starting with 'http/https'
  other-fields:
    wikidata:
      URI: http://schema.org/isPartOf
      datatype: URI
    concept:
      URI: /partoftest
      datatype: URI
    parent_code:
      URI: /parent_identifier_example
      datatype: string
    location:
      URI: http://schema.org/isPartOf 
      datatype: URI
